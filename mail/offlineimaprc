[general]
accounts = Aptivate,FastMail
#accounts = Aptivate, Gmail
#ui = Curses.Blinkenlights
#ui = TTY.TTYUI
# non-interactive means not asking for a password
#ui = Noninteractive.Basic
#ui = Noninteractive.Quiet
ui = quiet
pythonfile = ~/.dotfiles/mail/offlineimap.py
fsync = False

[Account Aptivate]
localrepository = LocalAptivate
remoterepository = RemoteAptivate
status_backend = sqlite
postsynchook = /home/hamish/bin/notmuchwork new
#autorefresh = 10
#quick = 10

[Repository LocalAptivate]
type = Maildir
localfolders = ~/workmail
nametrans = lambda folder: {'Inbox': 'general_inbox',
                            'carers': 'INBOX.carers',
                            'nagios': 'INBOX.nagios',
                            'Sent':   'Sent',
                            }.get(folder, folder)

[Repository RemoteAptivate]
type = IMAP
remotehost = mail.aptivate.org
remoteuser = hamish
#remotepasseval = mailpasswd('aptivate')
preauthtunnel = ssh -q -o ControlPath=/home/hamish/.ssh/muxcontrol/IMAP_%r@%h:%p -i /home/hamish/.ssh/id_mail_imap -o Compression=yes mail.aptivate.org '/usr/libexec/dovecot/imap'
maxconnections = 2
ssl = yes
nametrans = lambda folder: {'general_inbox': 'Inbox',
                            'INBOX.carers': 'carers',
                            'INBOX.nagios': 'nagios',
                            'Sent':   'Sent',
                            }.get(folder, folder)
folderfilter = lambda foldername: foldername in [
             'general_inbox', 'INBOX.carers', 'INBOX.nagios', 'Sent']


[Account Gmail]
localrepository = GmailLocal
remoterepository = GmailRemote
status_backend = sqlite
#postsynchook = notmuch new

[Repository GmailLocal]
type = Maildir
localfolders = ~/.maildir-gmail
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository GmailRemote]
maxconnections = 1
type = Gmail
remoteuser = dmishd@gmail.com
#remotepasseval = mailpasswd('gmail')
realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             'Nagios',
                                             'Django',
                                             'Flask',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[Account FastMail]
localrepository = FastMailLocal
remoterepository = FastMailRemote
status_backend = sqlite

[Repository FastMailLocal]
type = Maildir
localfolders = ~/.maildir-fastmail

[Repository FastMailRemote]
maxconnections = 2
type = IMAP
ssl = yes
expunge = no
remotehost = mail.messagingengine.com
remoteuser = mishd@fastmail.fm
remotepassfile = ~/.passwd/fastmail
#remotepasseval = mailpasswd('fastmail')
realdelete = no
folderfilter = lambda folder: folder not in ['INBOX.Trash',
                                             'INBOX.Junk',
                                             'INBOX.Junk Mail']
