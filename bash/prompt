
RESET="\[$(tput sgr0)\]"
BLUE="\[$(tput setf 1)\]"
GREEN="\[$(tput setaf 2)\]"
YELLOW="\[$(tput bold ; tput setaf 3)\]"
RED="\[$(tput setaf 1)\]"

function parse_git_branch {

  git rev-parse --git-dir &> /dev/null
  git_status="$(git status 2> /dev/null)"
  state=""
  if [[ ${git_status} =~ "# Changes to be committed:" ]]; then
    state+="s"
  fi
  if [[ ${git_status} =~ "# Changes not staged for commit:" ]]; then
    state+="m"
  fi
  if [[ ${git_status} =~ "# Untracked files:" ]]; then
    state+="u"
  fi
  if [[ "$state" != "" ]]; then
    state="${RED}["$state"]"
  fi

  remote_pattern="# Your branch is (.*) of"
  diverge_pattern="# Your branch and (.*) have diverged"
  branch_pattern="^# On branch ([^${IFS}]*)"
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      remote="${YELLOW}↑"
    else
      remote="${YELLOW}↓"
    fi
  fi
  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="${YELLOW}↕"
  fi
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch=${BASH_REMATCH[1]:0:15}
    echo "(${branch})${remote}${state}"
  fi
}

function prompt_func() {
    previous_return_value=$?
    if [ $previous_return_value -eq 0 ]; then
        prompt_col="${GREEN}"
    else
        prompt_col="${RED}"
    fi
    return_val="${prompt_col}${previous_return_value}${RESET}"

    history -a;

    if [ -n "${VIRTUAL_ENV:+x}" ]; then
        ve="${YELLOW}["${VIRTUAL_ENV##*/}"]${RESET}" #`basename \` dirname ${VIRTUAL_ENV}\``]"
    else
        ve=""
    fi

    CurDir=$(pwd|sed -e "s!$HOME!~!"|sed -re "s!([^/])[^/]+/!\1/!g")

    PS1="${return_val} ${ve}${prompt_col}\u@\h:${CurDir}${YELLOW}$(parse_git_branch)${RESET}${prompt_col}\$ ${RESET}"
}

# abbreviate the dir path in the prompt
PROMPT_COMMAND=prompt_func

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"; history -a; CurDir=`pwd|sed -e "s!$HOME!~!"|sed -re "s!([^/])[^/]+/!\1/!g"`'
    ;;
*)
    ;;
esac

# vi: ft=sh
