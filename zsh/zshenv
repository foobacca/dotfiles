typeset -U path
# from http://superuser.com/a/39995/1630
# if the directory exists, and the directory is not already
# on the path, then add to $PATH
function pathadd {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        path=($path $1)
    fi
}

function pathaddprefix {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        path=($1 $path)
    fi
}

typeset -T LD_LIBRARY_PATH ld_library_path
typeset -U ld_library_path
function ldlibrarypathadd {
    if [ -d "$1" ] && [[ ":$LD_LIBRARY_PATH:" != *":$1:"* ]]; then
        ld_library_path=($ld_library_path $1)
    fi
}

typeset -T LD_PRELOAD ld_preload
typeset -U ld_preload
function ldpreloadadd {
    if [ -f "$1" ] && [[ ":$LD_PRELOAD:" != *":$1:"* ]]; then
        ld_preload=($ld_preload $1)
    fi
}

pathadd /snap/bin
pathadd $HOME/.wp-cli/bin
pathadd $HOME/Dropbox/tech/bin
pathadd $HOME/lib/pebble/bin
pathadd /var/lib/gems/1.8/bin
pathadd /var/lib/gems/1.9.1/bin
pathadd $HOME/.gem/ruby/2.5.0/bin
pathadd $HOME/node_modules/phantomjs/bin
pathadd $HOME/.local/bin
pathadd $HOME/Library/Python/3.9/bin
pathadd $HOME/.local/share/go/bin
pathadd $HOME/.linuxbrew/bin
pathadd $HOME/.cargo/bin
pathadd $HOME/.pyenv/bin
pathaddprefix $HOME/bin
pathadd /Applications/Postgres.app/Contents/Versions/latest/bin
pathadd /opt/homebrew/Cellar/pyenv/2.3.5/bin

ldlibrarypathadd /usr/local/lib
ldlibrarypathadd $HOME/.linuxbrew/lib

if [ -f "$HOME/.pyenv/bin/pyenv" ]; then
    eval "$($HOME/.pyenv/bin/pyenv init -)"
    eval "$($HOME/.pyenv/bin/pyenv virtualenv-init -)"
fi

if [ -d "/opt/homebrew/Cellar/pyenv/" ]; then
    PYENV=$(ls -1 /opt/homebrew/Cellar/pyenv/*/bin/pyenv | tail -1 )
    eval "$($PYENV init - --no-rehash)"
    eval "$($PYENV virtualenv-init -)"
fi

# make neovim checkhealth a bit happier
# see https://vi.stackexchange.com/questions/7644/use-vim-with-virtualenv/7654#7654
if [[ -n $VIRTUAL_ENV && -e "${VIRTUAL_ENV}/bin/activate" ]]; then
  source "${VIRTUAL_ENV}/bin/activate"
fi

if [ -x "$(command -v mcfly)" ]; then
    eval "$(mcfly init zsh)"
fi

if [[ -o login ]]; then
    # disable Ctrl-S / Ctrl-Q
    stty -ixon
    #stty stop '' -ixon -ixoff
fi
